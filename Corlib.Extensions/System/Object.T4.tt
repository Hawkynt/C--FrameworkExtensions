<#@ template debug="false" hostspecific="false" language="C#" #>
<#@ assembly name="System.Core" #>
<#@ import namespace="System.Linq" #>
<#@ import namespace="System.Text" #>
<#@ import namespace="System.Collections.Generic" #>
<#@ output extension=".cs" #>
#region (c)2010-2042 Hawkynt

// This file is part of Hawkynt's .NET Framework extensions.
// 
// Hawkynt's .NET Framework extensions are free software:
// you can redistribute and/or modify it under the terms
// given in the LICENSE file.
// 
// Hawkynt's .NET Framework extensions is distributed in the hope that
// it will be useful, but WITHOUT ANY WARRANTY without even the implied
// warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.
// See the LICENSE file for more details.
// 
// You should have received a copy of the License along with Hawkynt's
// .NET Framework extensions. If not, see
// <https://github.com/Hawkynt/C--FrameworkExtensions/blob/master/LICENSE>.

#endregion

/* ATTENTION: This file is generated by a tool. All changes will be reverted upon next run ! */

using System.Collections.Generic;

namespace System;

public static partial class ObjectExtensions {

<# foreach (var type in new[] { "byte", "sbyte", "ushort", "short", "uint", "int", "ulong", "long" }) {#>
  public static IEnumerable<T> RepeatAsEnumerable<T>(this T @this, <#=type#> count) {
    for (<#=type#> i = 0; i < count ; ++i)
      yield return @this;
  }

<# }#>
<# foreach (var type in new[] { "byte", "sbyte", "ushort", "short", "int" }) {#>
  public static T[] RepeatAsArray<T>(this T @this, <#=type#> count) {
    var result = new T[count];  
    Utilities.Array.Fill(result, @this);
    return result;
  }

<# }#>

}