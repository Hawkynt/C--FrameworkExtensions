# This workflow will build a .NET project
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-net

name: .NET

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]

jobs:
  build:

    runs-on: ubuntu-latest

    strategy:
      matrix:
        csproj-file: ['Backports/Backports.csproj','Corlib.Extensions/Corlib.Extensions.csproj','Corlib.Extensions/Corlib.Extensions (NoUnsafe).csproj','PresentationCore.Extensions/PresentationCore.Extensions.csproj','System.Drawing.Extensions/System.Drawing.Extensions.csproj','System.Windows.Forms.Extensions/System.Windows.Form.Extensions.csproj']

    steps:
    - uses: actions/checkout@v3
    - name: Setup .NET
      uses: actions/setup-dotnet@v3
      with:
        dotnet-version: 7.x
    - name: Show Info
      run: dotnet --info
    - name: Restore dependencies
      run: dotnet restore ${{ matrix.csproj-file }}
    - name: Build
      run: dotnet build ${{ matrix.csproj-file }} --no-restore --configuration Release /p:EnableWindowsTargeting=true
    - name: Test
      run: dotnet test ${{ matrix.csproj-file }} --no-build --verbosity normal /p:EnableWindowsTargeting=true
    - name: Pack NuGet package
      run: dotnet pack ${{ matrix.csproj-file }} --configuration Release --output ./artifacts /p:EnableWindowsTargeting=true
    - name: Publish the package to nuget.org
      run: dotnet nuget push ./artifacts/*.nupkg -k $NUGET_AUTH_TOKEN -s https://api.nuget.org/v3/index.json
      env:
        NUGET_AUTH_TOKEN: ${{ secrets.NUGET_TOKEN }}
      
