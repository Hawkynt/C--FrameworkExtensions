# This workflow will build a .NET project
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-net

name: .NET

on:
  push:
    branches: [ "master" ]
#  pull_request:
#    branches: [ "master" ]

jobs:
   
  Build_Backports:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        csproj-file: ['Backports/Backports.csproj']

    permissions:
      contents: write

    steps:
    - uses: actions/checkout@v3
      with:
        fetch-depth: 0

    - name: Setup .NET
      uses: actions/setup-dotnet@v3
      with:
        dotnet-version: 7.x
        
    - name: Show Info
      run: dotnet --info
      
    - name: Receive Version
      run: perl ".github/workflows/ReadVersion.pl" "${{ matrix.csproj-file }}"
      
    - name: Restore dependencies
      run: dotnet restore "${{ matrix.csproj-file }}"
      
    - name: Build
      run: dotnet build "${{ matrix.csproj-file }}" --no-restore --configuration Release -p:Version=${{ env.Compile_Version }}
      
    - name: Test
      run: dotnet test "${{ matrix.csproj-file }}" --no-build --verbosity normal
      
    - name: Pack NuGet package
      run: dotnet pack "${{ matrix.csproj-file }}" --configuration Release --output ./artifacts -p:Version=${{ env.Compile_Version }}
      
    - name: Publish the package to nuget.org
      run: dotnet nuget push ./artifacts/*.nupkg -k $NUGET_AUTH_TOKEN -s https://api.nuget.org/v3/index.json --skip-duplicate
      env:
        NUGET_AUTH_TOKEN: ${{ secrets.NUGET_TOKEN }}
    
  Build_Corlib_And_Co:
    needs: Build_Backports
    runs-on: ubuntu-latest

    strategy:
      matrix:
        csproj-file: ['Corlib.Extensions/Corlib.Extensions.csproj','Corlib.Extensions/Corlib.Extensions (NoUnsafe).csproj','PresentationCore.Extensions/PresentationCore.Extensions.csproj','System.Drawing.Extensions/System.Drawing.Extensions.csproj','System.Windows.Forms.Extensions/System.Windows.Form.Extensions.csproj','System.DirectoryServices.AccountManagement.Extensions/DirectoryServices.Extensions.csproj']

    steps:
    - uses: actions/checkout@v3
      with:
        fetch-depth: 0
        
    - name: Setup .NET
      uses: actions/setup-dotnet@v3
      with:
        dotnet-version: 7.x
        
    - name: Show Info
      run: dotnet --info
      
    - name: Receive Version
      run: perl ".github/workflows/ReadVersion.pl" "${{ matrix.csproj-file }}"

    - name: Restore dependencies
      run: dotnet restore "${{ matrix.csproj-file }}"
      
    - name: Build
      run: dotnet build "${{ matrix.csproj-file }}" --no-restore --configuration Release -p:Version=${{ env.Compile_Version }}
      
    - name: Test
      run: dotnet test "${{ matrix.csproj-file }}" --no-build --verbosity normal
      
    - name: Pack NuGet package
      run: dotnet pack "${{ matrix.csproj-file }}" --configuration Release --output ./artifacts -p:Version=${{ env.Compile_Version }}
      
    - name: Publish the package to nuget.org
      run: dotnet nuget push ./artifacts/*.nupkg -k $NUGET_AUTH_TOKEN -s https://api.nuget.org/v3/index.json --skip-duplicate
      env:
        NUGET_AUTH_TOKEN: ${{ secrets.NUGET_TOKEN }}
      
